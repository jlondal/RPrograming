} else {
data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia   <- as.numeric(data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia  )
rank <- num_helper(data,'Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia', state, num)
}
}
result <- rank
result
}
}
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 50)
rankhospital("MN", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 10)
setwd("/Users/jameslondall/Dropbox/DS Course/RPrograming/Week 4")
source('worst.R')
source('best.R')
num_helper <- function(state_subset, col_nam, num) {
# get "attack", "failure" and "pneumonia" vector
outcome_arr <- as.numeric(state_subset[, col_num])
len <- dim(state_subset[!is.na(outcome_arr), ])[1]
if (num == "best") {
rank <- best(state, outcome)
} else if (num == "worst") {
rank <- worst(state, outcome)
} else if (num > len) {
rank <- NA
} else {
rank <- state_subset$State[order(outcome_arr, state_subset$State)[num]]
}
result <- rank
result
}
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
if(outcome == "heart attack") {
hospital[i] <- num_helper(state_subset, 11, num)
} else if (outcome == "heart failure") {
hospital[i] <- num_helper(state_subset, 17, num)
} else {
hospital[i] <- num_helper(state_subset, 23, num)
}
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
head(rankall("heart attack", 20), 10)
setwd("/Users/jameslondall/Dropbox/DS Course/RPrograming/Week 4")
source('worst.R')
source('best.R')
num_helper <- function(state_subset, col_nam, num) {
# get "attack", "failure" and "pneumonia" vector
outcome_arr <- as.numeric(state_subset[[col_nam]])
len <- dim(state_subset[!is.na(outcome_arr), ])[1]
if (num == "best") {
rank <- best(state, outcome)
} else if (num == "worst") {
rank <- worst(state, outcome)
} else if (num > len) {
rank <- NA
} else {
rank <- state_subset$State[order(outcome_arr, state_subset$State)[num]]
}
result <- rank
result
}
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
if(outcome == "heart attack") {
hospital[i] <- num_helper(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack', num)
} else if (outcome == "heart failure") {
hospital[i] <- num_helper(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure', num)
} else {
hospital[i] <- num_helper(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia', num)
}
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
state_subset$State[1]
num_helper <- function(state_subset, col_nam, num) {
# get "attack", "failure" and "pneumonia" vector
outcome_arr <- as.numeric(state_subset[[col_nam]])
len <- dim(state_subset[!is.na(outcome_arr), ])[1]
if (num == "best") {
rank <- best(state_subset$State[1], outcome)
} else if (num == "worst") {
rank <- worst(state_subset$State[1], outcome)
} else if (num > len) {
rank <- NA
} else {
rank <- state_subset$State[order(outcome_arr, state_subset$State)[num]]
}
result <- rank
result
}
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
if(outcome == "heart attack") {
hospital[i] <- num_helper(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack', num)
} else if (outcome == "heart failure") {
hospital[i] <- num_helper(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure', num)
} else {
hospital[i] <- num_helper(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia', num)
}
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"), 3)
worst(state_subset$State[1], outcome)
rankhospital("MN", "heart attack", 50)
rankhospital("TX", "heart failure", 10)
setwd("/Users/jameslondall/Dropbox/DS Course/RPrograming/Week 4")
source('worst.R')
source('best.R')
num_helper <- function(state_subset, col_nam, num) {
# get "attack", "failure" and "pneumonia" vector
outcome_arr <- as.numeric(state_subset[[col_nam]])
len <- dim(state_subset[!is.na(outcome_arr), ])[1]
if (num == "best") {
rank <- best(state_subset$State[1], outcome)
} else if (num == "worst") {
rank <- worst(state_subset$State[1], outcome)
} else if (num > len) {
rank <- NA
} else {
rank <- state_subset$State[order(outcome_arr, state_subset$State)[num]]
}
result <- rank
result
}
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
if(outcome == "heart attack") {
hospital[i] <- num_helper(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack', num)
} else if (outcome == "heart failure") {
hospital[i] <- num_helper(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure', num)
} else {
hospital[i] <- num_helper(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia', num)
}
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
setwd("/Users/jameslondall/Dropbox/DS Course/RPrograming/Week 4")
source('worst.R')
source('best.R')
num_helper <- function(data, col_nam, state, num) {
state_subset <- data[data$'State' == state,]
outcome_arr <- state_subset[[col_nam]]
len <- dim(state_subset[!is.na(outcome_arr), ])[1]
if (num > len) {
rank <- NA
} else {
rank <- state_subset[['Hospital.Name']] [order(outcome_arr, state_subset[['Hospital.Name']])[num]]
}
result <- rank
result
}
rankhospital <- function(state, outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
# change data type from character to numeric
data[, 11] <- as.numeric(data[, 11]) # heart attack
data[, 17] <- as.numeric(data[, 17]) # heart failure
data[, 23] <- as.numeric(data[, 23]) # pneumonia
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data$State) {
stop("invalid state")
} else if(!outcome %in% valid_outcomes) {
stop("invalid outcome")
} else {
if (num == "best") {
rank <- best(state, outcome)
} else if (num == "worst") {
rank <- worst(state, outcome)
} else {
if(outcome == "heart attack") {
data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
rank <- num_helper(data, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack', state, num)
} else if(outcome == "heart failure") {
data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure  <- as.numeric(data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
rank <- num_helper(data, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure', state, num)
} else {
data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia   <- as.numeric(data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia  )
rank <- num_helper(data,'Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia', state, num)
}
}
result <- rank
result
}
}
rankhospital("MN", "heart attack", 50)
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 10)
setwd("/Users/jameslondall/Dropbox/DS Course/RPrograming/Week 4")
source('worst.R')
source('best.R')
sub_rankall <- function(state_subset, col_nam, num) {
# get "attack", "failure" and "pneumonia" vector
outcome_arr <- as.numeric(state_subset[[col_nam]])
len <- dim(state_subset[!is.na(outcome_arr), ])[1]
if (num == "best") {
rank <- best(state_subset$State[1], outcome)
} else if (num == "worst") {
rank <- worst(state_subset$State[1], outcome)
} else if (num > len) {
rank <- NA
} else {
rank <- state_subset$State[order(outcome_arr, state_subset$State)[num]]
}
result <- rank
result
}
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
if(outcome == "heart attack") {
hospital[i] <- sub_rankall(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack', num)
} else if (outcome == "heart failure") {
hospital[i] <- sub_rankall(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure', num)
} else {
hospital[i] <- sub_rankall(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia', num)
}
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
head(rankall("heart attack", 20), 10)
setwd("/Users/jameslondall/Dropbox/DS Course/RPrograming/Week 4")
source('worst.R')
source('best.R')
sub_rankall <- function(state_subset, col_nam, num) {
# get "attack", "failure" and "pneumonia" vector
outcome_arr <- as.numeric(state_subset[[col_nam]])
len <- dim(state_subset[!is.na(outcome_arr), ])[1]
if (num == "best") {
rank <- best(state_subset$State[1], outcome)
} else if (num == "worst") {
rank <- worst(state_subset$State[1], outcome)
} else if (num > len) {
rank <- NA
} else {
rank <- state_subset$Hospital.Name[order(outcome_arr, state_subset$State)[num]]
}
result <- rank
result
}
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
if(outcome == "heart attack") {
hospital[i] <- sub_rankall(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack', num)
} else if (outcome == "heart failure") {
hospital[i] <- sub_rankall(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure', num)
} else {
hospital[i] <- sub_rankall(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia', num)
}
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
worst(state_subset$State[1], outcome)
worst(state_subset$State[1], "pneumonia")
tail(rankall("pneumonia", "worst"), 3)
rankall("pneumonia", "worst")
setwd("/Users/jameslondall/Dropbox/DS Course/RPrograming/Week 4")
source('worst.R')
source('best.R')
sub_rankall <- function(state_subset, col_nam, num) {
# get "attack", "failure" and "pneumonia" vector
outcome_arr <- as.numeric(state_subset[[col_nam]])
len <- dim(state_subset[!is.na(outcome_arr), ])[1]
if (num == "best") {
rank <- best(state_subset$State[1], col_nam)
} else if (num == "worst") {
rank <- worst(state_subset$State[1], col_nam)
} else if (num > len) {
rank <- NA
} else {
rank <- state_subset$Hospital.Name[order(outcome_arr, state_subset$State)[num]]
}
result <- rank
result
}
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
if(outcome == "heart attack") {
hospital[i] <- sub_rankall(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack', num)
} else if (outcome == "heart failure") {
hospital[i] <- sub_rankall(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure', num)
} else {
hospital[i] <- sub_rankall(state_subset, 'Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia', num)
}
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
setwd("/Users/jameslondall/Dropbox/DS Course/RPrograming/Week 4")
source('worst.R')
source('best.R')
sub_rankall <- function(state_subset, col_nam, num) {
# get "attack", "failure" and "pneumonia" vector
outcome_arr <- as.numeric(state_subset[[col_nam]])
len <- dim(state_subset[!is.na(outcome_arr), ])[1]
if (num == "best") {
rank <- best(state_subset$State[1], col_nam)
} else if (num == "worst") {
rank <- worst(state_subset$State[1], col_nam)
} else if (num > len) {
rank <- NA
} else {
rank <- state_subset$Hospital.Name[order(outcome_arr, state_subset$State)[num]]
}
result <- rank
result
}
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
if(outcome == "heart attack") {
hospital[i] <- sub_rankall(state_subset,"heart attack", num)
} else if (outcome == "heart failure") {
hospital[i] <- sub_rankall(state_subset, "heart failure", num)
} else {
hospital[i] <- sub_rankall(state_subset, 'pneumonia', num)
}
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
setwd("/Users/jameslondall/Dropbox/DS Course/RPrograming/Week 4")
source('worst.R')
source('best.R')
source('rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('worst.R')
source('best.R')
source('rankhospital.R')
sub_rankall <- function(state_subset, col_nam, num) {
# get "attack", "failure" and "pneumonia" vector
outcome_arr <- as.numeric(state_subset[[col_nam]])
len <- dim(state_subset[!is.na(outcome_arr), ])[1]
rank <- rankhospital(state_subset$State[1], col_nam, num)
rank
}
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
if(outcome == "heart attack") {
hospital[i] <- sub_rankall(state_subset,"heart attack", num)
} else if (outcome == "heart failure") {
hospital[i] <- sub_rankall(state_subset, "heart failure", num)
} else {
hospital[i] <- sub_rankall(state_subset, 'pneumonia', num)
}
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
hospital[i] <- rankhospital(state_subset$State[1], col_nam, num)
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
valid <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid) {
stop("invalid outcome")
} else {
for(i in 1:arr_len) {
state_subset <- data[data$State==state_arr[i], ]
hospital[i] <- rankhospital(state_subset$State[1], outcome, num)
}
}
result <- data.frame(hospital=hospital, state=state_arr)
result
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
setwd("/Users/jameslondall/Dropbox/DS Course/RPrograming/Week 1")
library(swirl)
swirl()
